[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\mcpwm_class\examples\mcpwm_class-example\build\bootloader\esp-idf\esptool_py && C:\Users\vaquettg\.espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Users/vaquettg/esp/v5.2.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/mcpwm_class/examples/mcpwm_class-example/build/bootloader/bootloader.bin"
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/9] Building CXX object esp-idf/mcpwm_class/CMakeFiles/__idf_mcpwm_class.dir/CComparator.cpp.obj
[3/9] Linking C static library esp-idf\mcpwm_class\libmcpwm_class.a
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Building C object CMakeFiles/mcpwm_class-example.elf.dir/project_elf_src_esp32.c.obj
[7/9] Linking CXX executable mcpwm_class-example.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/mcpwm_class/examples/mcpwm_class-example/build/mcpwm_class-example.bin
[9/9] cmd.exe /C "cd /D D:\mcpwm_class\examples\mcpwm_class-example\build\esp-idf\esptool_py && C:\Users\vaquettg\.espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Users/vaquettg/esp/v5.2.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/mcpwm_class/examples/mcpwm_class-example/build/partition_table/partition-table.bin D:/mcpwm_class/examples/mcpwm_class-example/build/mcpwm_class-example.bin"
mcpwm_class-example.bin binary size 0x25fe0 bytes. Smallest app partition is 0x100000 bytes. 0xda020 bytes (85%) free.
